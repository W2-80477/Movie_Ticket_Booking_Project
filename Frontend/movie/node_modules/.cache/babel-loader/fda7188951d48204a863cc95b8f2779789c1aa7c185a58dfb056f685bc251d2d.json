{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './theaters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Theaters() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTheater, setSelectedTheater] = useState(null);\n  const theatersData = [{\n    id: 1,\n    name: 'Theater A',\n    screens: [{\n      id: 101,\n      name: 'Screen 1',\n      shows: [{\n        id: 1001,\n        time: '12:00 PM'\n      }, {\n        id: 1002,\n        time: '03:00 PM'\n      }]\n    }, {\n      id: 102,\n      name: 'Screen 2',\n      shows: [{\n        id: 1003,\n        time: '01:30 PM'\n      }, {\n        id: 1004,\n        time: '04:30 PM'\n      }]\n    }]\n  }, {\n    id: 2,\n    name: 'Theater B',\n    screens: [{\n      id: 201,\n      name: 'Screen 1',\n      shows: [{\n        id: 2001,\n        time: '11:00 AM'\n      }, {\n        id: 2002,\n        time: '02:30 PM'\n      }]\n    }, {\n      id: 202,\n      name: 'Screen 2',\n      shows: [{\n        id: 2003,\n        time: '12:45 PM'\n      }, {\n        id: 2004,\n        time: '05:15 PM'\n      }]\n    }, {\n      id: 203,\n      name: 'Screen 3',\n      shows: [{\n        id: 2003,\n        time: '12:45 PM'\n      }, {\n        id: 2004,\n        time: '05:15 PM'\n      }]\n    }]\n  }];\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    // You may want to fetch data for the selected date and theater here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theater\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theaters-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: [\"Select Date: \", selectedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Theaters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 13\n                }, this), theatersData.map(theater => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setSelectedTheater(theater),\n                    className: `btn ${selectedTheater === theater ? 'btn-primary' : 'btn-secondary'}`,\n                    \"aria-label\": `Select ${theater.name} theater`,\n                    children: theater.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 17\n                  }, this)\n                }, theater.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"datePicker\",\n              children: \"Select Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"datePicker\",\n              value: selectedDate.toISOString().split('T')[0],\n              onChange: e => handleDateChange(new Date(e.target.value)),\n              className: \"form-control mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, this), selectedTheater && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedTheater.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"screenSelect\",\n                children: \"Select Screen:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"screenSelect\",\n                className: \"form-select mb-2\",\n                children: selectedTheater.screens.map(screen => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: screen.id,\n                  children: screen.name\n                }, screen.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Theaters, \"QUYRexYIgvAlUx29etU0zJFSnDM=\");\n_c = Theaters;\nexport default Theaters;\nvar _c;\n$RefreshReg$(_c, \"Theaters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Theaters","_s","selectedDate","setSelectedDate","Date","selectedTheater","setSelectedTheater","theatersData","id","name","screens","shows","time","handleDateChange","date","className","children","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","map","theater","onClick","htmlFor","type","value","toISOString","split","onChange","e","target","screen","_c","$RefreshReg$"],"sources":["/home/sunbeam/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './theaters.css';\n\nfunction Theaters() {\n\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedTheater, setSelectedTheater] = useState(null);\n\n    const theatersData = [\n        {\n          id: 1,\n          name: 'Theater A',\n          screens: [\n            {\n              id: 101,\n              name: 'Screen 1',\n              shows: [\n                { id: 1001, time: '12:00 PM' },\n                { id: 1002, time: '03:00 PM' },\n              ],\n            },\n            {\n              id: 102,\n              name: 'Screen 2',\n              shows: [\n                { id: 1003, time: '01:30 PM' },\n                { id: 1004, time: '04:30 PM' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: 'Theater B',\n          screens: [\n            {\n              id: 201,\n              name: 'Screen 1',\n              shows: [\n                { id: 2001, time: '11:00 AM' },\n                { id: 2002, time: '02:30 PM' },\n              ],\n            },\n            {\n              id: 202,\n              name: 'Screen 2',\n              shows: [\n                { id: 2003, time: '12:45 PM' },\n                { id: 2004, time: '05:15 PM' },\n              ],\n            },{\n                id: 203,\n                name: 'Screen 3',\n                shows: [\n                  { id: 2003, time: '12:45 PM' },\n                  { id: 2004, time: '05:15 PM' },\n                ],\n              },\n          ],\n        },\n      ];\n      \n      \n\n      const handleDateChange = (date) => {\n        setSelectedDate(date);\n        // You may want to fetch data for the selected date and theater here\n      };\n\n  return (\n    <div className='theater'>\n    <div className='theaters-container'>\n  <div className='container mt-5'>\n    <h2 className='mb-4'>Select Date: {selectedDate.toDateString()}</h2>\n    <div className='row'>\n      <div className='col-md-4'>\n        <div className='card'>\n          <div className='card-body'>\n            <h2>Theaters</h2>\n            {theatersData.map((theater) => (\n              <div key={theater.id} className='mb-3'>\n                <button\n                  onClick={() => setSelectedTheater(theater)}\n                  className={`btn ${selectedTheater === theater ? 'btn-primary' : 'btn-secondary'}`}\n                  aria-label={`Select ${theater.name} theater`}\n                >\n                  {theater.name}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className='col-md-8'>\n        <label htmlFor='datePicker'>Select Date:</label>\n        <input\n          type='date'\n          id='datePicker'\n          value={selectedDate.toISOString().split('T')[0]}\n          onChange={(e) => handleDateChange(new Date(e.target.value))}\n          className='form-control mb-3'\n        />\n        {selectedTheater && (\n          <div>\n            <h3>{selectedTheater.name}</h3>\n            <label htmlFor='screenSelect'>Select Screen:</label>\n            <select id='screenSelect' className='form-select mb-2'>\n              {selectedTheater.screens.map((screen) => (\n                <option key={screen.id} value={screen.id}>\n                  {screen.name}\n                </option>\n              ))}\n            </select>\n            {/* Add more components or logic for selected theater */}\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n</div>\n\n  </div>\n  );\n}\n\nexport default Theaters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}