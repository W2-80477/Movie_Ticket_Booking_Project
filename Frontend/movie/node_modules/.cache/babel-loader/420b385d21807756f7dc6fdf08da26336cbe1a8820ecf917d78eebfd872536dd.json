{"ast":null,"code":"var _jsxFileName = \"/home/apurva/Movie_Ticket_Booking_Project(1)/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './theaters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Theaters() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTheater, setSelectedTheater] = useState(null);\n  const navigate = useNavigate();\n  const theatersData = [{\n    id: 1,\n    name: 'Theater A',\n    screens: [{\n      id: 101,\n      name: 'Screen 1',\n      shows: [{\n        id: 1001,\n        time: '12:00 PM'\n      }, {\n        id: 1002,\n        time: '03:00 PM'\n      }]\n    }, {\n      id: 102,\n      name: 'Screen 2',\n      shows: [{\n        id: 1003,\n        time: '01:30 PM'\n      }, {\n        id: 1004,\n        time: '04:30 PM'\n      }]\n    }]\n  }, {\n    id: 2,\n    name: 'Theater B',\n    screens: [{\n      id: 201,\n      name: 'Screen 1',\n      shows: [{\n        id: 2001,\n        time: '11:00 AM'\n      }, {\n        id: 2002,\n        time: '02:30 PM'\n      }]\n    }, {\n      id: 202,\n      name: 'Screen 2',\n      shows: [{\n        id: 2003,\n        time: '12:45 PM'\n      }, {\n        id: 2004,\n        time: '05:15 PM'\n      }]\n    }, {\n      id: 203,\n      name: 'Screen 3',\n      shows: [{\n        id: 2003,\n        time: '12:45 PM'\n      }, {\n        id: 2004,\n        time: '05:15 PM'\n      }]\n    }]\n  }];\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleTheaterClick = theater => {\n    setSelectedTheater(theater);\n    navigate(\"/seats\", {\n      theater\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theater\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: [\"Select Date: \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Theaters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this), theatersData.map(theater => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleTheaterClick(theater),\n                  className: `btn ${selectedTheater === theater ? 'btn-primary' : 'btn-secondary'}`,\n                  \"aria-label\": `Select ${theater.name} theater`,\n                  children: theater.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 15\n                }, this)\n              }, theater.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 13\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"datePicker\",\n            children: \"Select Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"datePicker\",\n            value: selectedDate.toISOString().split('T')[0],\n            onChange: e => handleDateChange(new Date(e.target.value)),\n            className: \"form-control mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this), selectedTheater && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedTheater.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"screenSelect\",\n              children: \"Select Screen:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"screenSelect\",\n              className: \"form-select mb-2\",\n              children: selectedTheater.screens.map(screen => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: screen.id,\n                children: screen.name\n              }, screen.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Theaters, \"lXKidV9GaPdt1YFIEnDfpnc8Enk=\", false, function () {\n  return [useNavigate];\n});\n_c = Theaters;\nexport default Theaters;\nvar _c;\n$RefreshReg$(_c, \"Theaters\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Theaters","_s","selectedDate","setSelectedDate","Date","selectedTheater","setSelectedTheater","navigate","theatersData","id","name","screens","shows","time","handleDateChange","date","handleTheaterClick","theater","className","children","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","htmlFor","type","value","toISOString","split","onChange","e","target","screen","_c","$RefreshReg$"],"sources":["/home/apurva/Movie_Ticket_Booking_Project(1)/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './theaters.css';\n\nfunction Theaters() {\n\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedTheater, setSelectedTheater] = useState(null);\n    const navigate = useNavigate();\n\n    const theatersData = [\n        {\n          id: 1,\n          name: 'Theater A',\n          screens: [\n            {\n              id: 101,\n              name: 'Screen 1',\n              shows: [\n                { id: 1001, time: '12:00 PM' },\n                { id: 1002, time: '03:00 PM' },\n              ],\n            },\n            {\n              id: 102,\n              name: 'Screen 2',\n              shows: [\n                { id: 1003, time: '01:30 PM' },\n                { id: 1004, time: '04:30 PM' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: 'Theater B',\n          screens: [\n            {\n              id: 201,\n              name: 'Screen 1',\n              shows: [\n                { id: 2001, time: '11:00 AM' },\n                { id: 2002, time: '02:30 PM' },\n              ],\n            },\n            {\n              id: 202,\n              name: 'Screen 2',\n              shows: [\n                { id: 2003, time: '12:45 PM' },\n                { id: 2004, time: '05:15 PM' },\n              ],\n            },{\n                id: 203,\n                name: 'Screen 3',\n                shows: [\n                  { id: 2003, time: '12:45 PM' },\n                  { id: 2004, time: '05:15 PM' },\n                ],\n              },\n          ],\n        },\n      ];\n      \n      \n\n      const handleDateChange = (date) => {\n        setSelectedDate(date);\n      };\n\n\n      const handleTheaterClick = (theater) => {\n        setSelectedTheater(theater);\n  \n        navigate(\"/seats\",{theater})\n      };\n\n\n  return (\n    <div className='theater'>\n        <div className='container mt-5'>\n  <h2 className='mb-4'>Select Date: {selectedDate.toDateString()}</h2>\n  <div className='row'>\n    <div className='col-md-4'>\n      <div className='card'>\n        <div className='card-body'>\n          <h2>Theaters</h2>\n          {theatersData.map((theater) => (\n            <div key={theater.id} className='mb-3'>\n              <button\n          onClick={() => handleTheaterClick(theater)}\n          className={`btn ${selectedTheater === theater ? 'btn-primary' : 'btn-secondary'}`}\n          aria-label={`Select ${theater.name} theater`}\n        >\n                {theater.name}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n    <div className='col-md-8'>\n      <label htmlFor='datePicker'>Select Date:</label>\n      <input\n        type='date'\n        id='datePicker'\n        value={selectedDate.toISOString().split('T')[0]}\n        onChange={(e) => handleDateChange(new Date(e.target.value))}\n        className='form-control mb-3'\n      />\n      {selectedTheater && (\n        <div>\n          <h3>{selectedTheater.name}</h3>\n          <label htmlFor='screenSelect'>Select Screen:</label>\n          <select id='screenSelect' className='form-select mb-2'>\n            {selectedTheater.screens.map((screen) => (\n              <option key={screen.id} value={screen.id}>\n                {screen.name}\n              </option>\n            ))}\n          </select>\n          {/* Add more components or logic for selected theater */}\n        </div>\n      )}\n    </div>\n  </div>\n</div>\n\n   \n  \n</div>\n\n\n  );\n}\n\nexport default Theaters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}