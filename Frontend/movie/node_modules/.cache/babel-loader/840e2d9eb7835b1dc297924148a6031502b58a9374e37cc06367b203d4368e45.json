{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './theaters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Theaters() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const theatersData = [{\n    id: 1,\n    name: 'Theater A',\n    screens: [{\n      id: 101,\n      name: 'Screen 1',\n      shows: [{\n        id: 1001,\n        time: '12:00 PM'\n      }, {\n        id: 1002,\n        time: '03:00 PM'\n      }\n      // Add more showtimes as needed\n      ]\n    }, {\n      id: 102,\n      name: 'Screen 2',\n      shows: [{\n        id: 1003,\n        time: '01:30 PM'\n      }, {\n        id: 1004,\n        time: '04:30 PM'\n      }\n      // Add more showtimes as needed\n      ]\n    }\n    // Add more screens as needed\n    ]\n  }, {\n    id: 2,\n    name: 'Theater B',\n    screens: [{\n      id: 201,\n      name: 'Screen 1',\n      shows: [{\n        id: 2001,\n        time: '11:00 AM'\n      }, {\n        id: 2002,\n        time: '02:30 PM'\n      }\n      // Add more showtimes as needed\n      ]\n    }, {\n      id: 202,\n      name: 'Screen 2',\n      shows: [{\n        id: 2003,\n        time: '12:45 PM'\n      }, {\n        id: 2004,\n        time: '05:15 PM'\n      }\n      // Add more showtimes as needed\n      ]\n    }\n    // Add more screens as needed\n    ]\n  }\n  // Add more theaters as needed\n  ];\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    // You may want to fetch data for the selected date here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theater\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theater\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: [\"Select Date: \", selectedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Theaters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, this), theatersData.map(theater => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: theater.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), theater.screens.map(screen => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: screen.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"list-group\",\n                      children: screen.shows.map(show => /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"list-group-item\",\n                        children: show.time\n                      }, show.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 25\n                    }, this)]\n                  }, screen.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this))]\n                }, theater.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"\",\n              selected: selectedDate,\n              onChange: handleDateChange,\n              dateFormat: \"MMMM d, yyyy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Theaters, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = Theaters;\nexport default Theaters;\nvar _c;\n$RefreshReg$(_c, \"Theaters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Theaters","_s","selectedDate","setSelectedDate","Date","theatersData","id","name","screens","shows","time","handleDateChange","date","className","children","toDateString","fileName","_jsxFileName","lineNumber","columnNumber","map","theater","screen","show","type","selected","onChange","dateFormat","_c","$RefreshReg$"],"sources":["/home/sunbeam/Movie_Ticket_Booking_Project/Frontend/movie/src/components/Theaters.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './theaters.css';\n\nfunction Theaters() {\n\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    const theatersData = [\n        {\n          id: 1,\n          name: 'Theater A',\n          screens: [\n            {\n              id: 101,\n              name: 'Screen 1',\n              shows: [\n                { id: 1001, time: '12:00 PM' },\n                { id: 1002, time: '03:00 PM' },\n                // Add more showtimes as needed\n              ],\n            },\n            {\n              id: 102,\n              name: 'Screen 2',\n              shows: [\n                { id: 1003, time: '01:30 PM' },\n                { id: 1004, time: '04:30 PM' },\n                // Add more showtimes as needed\n              ],\n            },\n            // Add more screens as needed\n          ],\n        },\n        {\n          id: 2,\n          name: 'Theater B',\n          screens: [\n            {\n              id: 201,\n              name: 'Screen 1',\n              shows: [\n                { id: 2001, time: '11:00 AM' },\n                { id: 2002, time: '02:30 PM' },\n                // Add more showtimes as needed\n              ],\n            },\n            {\n              id: 202,\n              name: 'Screen 2',\n              shows: [\n                { id: 2003, time: '12:45 PM' },\n                { id: 2004, time: '05:15 PM' },\n                // Add more showtimes as needed\n              ],\n            },\n            // Add more screens as needed\n          ],\n        },\n        // Add more theaters as needed\n      ];\n      \n      \n\n      const handleDateChange = (date) => {\n        setSelectedDate(date);\n        // You may want to fetch data for the selected date here\n      };\n\n  return (\n    <div className='theater'>\n         <div className='theater'>\n      <div className='container mt-5'>\n        <h2 className='mb-4'>Select Date: {selectedDate.toDateString()}</h2>\n        <div className='row'>\n          <div className='col-md-4'>\n            <div className='card'>\n              <div className='card-body'>\n                <h2>Theaters</h2>\n                {theatersData.map((theater) => (\n                  <div key={theater.id} className='mb-3'>\n                    <h3>{theater.name}</h3>\n                    {theater.screens.map((screen) => (\n                      <div key={screen.id} className='mb-2'>\n                        <h4>{screen.name}</h4>\n                        <ul className='list-group'>\n                          {screen.shows.map((show) => (\n                            <li key={show.id} className='list-group-item'>\n                              {show.time}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className='col-md-8'>\n            <input type=''\n              selected={selectedDate}\n              onChange={handleDateChange}\n              dateFormat='MMMM d, yyyy'\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Theaters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}